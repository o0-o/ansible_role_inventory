---
# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
#
# Configure the inventory directories and files.
#
########################################################################

# The inventory must be a directory. Only the first inventory source is
# considered.
- name: Define the inventory directory
  ansible.builtin.set_fact:
    inventory_dir: >-
      {{  inventory_dir
          | default( ansible_inventory_sources | first, true ) }}

# Create the inventory directory.
- name: "Create directory {{ inventory_dir }}"
  ansible.builtin.file:
    path: "{{ inventory_dir }}"
    state: directory
    mode: 0755

# Create the host_vars directory.
- name: "Create directory {{ hv_dir_var }}"
  ansible.builtin.file:
    path: "{{ hv_dir_var }}"
    state: directory
    mode: 0755
  vars:
    hv_dir_var: "{{ inventory_dir }}/host_vars"

# Create the group_vars directory.
- name: "Create directory {{ gv_dir_var }}"
  ansible.builtin.file:
    path: "{{ gv_dir_var }}"
    state: directory
    mode: 0755
  vars:
    gv_dir_var: "{{ inventory_dir }}/group_vars"

# Create a group_vars file for each group, excluding the ungrouped group
# or any group beginning with an underscore.
- name: Run tasks to configure group variables files
  ansible.builtin.include_tasks: cfg_group_vars.yml
  vars:
    gv_file_var: "{{ inventory_dir }}/group_vars/{{ group_item }}.yml"
  loop: "{{ groups.keys()
            | list
            | reject('==', 'ungrouped')
            | reject('match', '^_.*$')
            | union( new_groups | default([]) ) }}"
  loop_control:
    loop_var: group_item

# Template the all.yml group_vars file with host defaults.
- name: Run tasks to configure the all group variables file
  ansible.builtin.include_tasks: cfg_group_all_vars.yml
  vars:
    all_gv_file_var: "{{ inventory_dir }}/group_vars/all.yml"

# Loop through hosts since we are in a run_once block.
- name: Run tasks to configure host variables files
  ansible.builtin.include_tasks: cfg_host_vars.yml
  vars:
    hv_file_var: "{{ inventory_dir }}/host_vars/{{ host_item }}.yml"
  loop: "{{ groups['all'] }}"
  loop_control:
    loop_var: host_item
